============配置================
git config --global user.name "Mona Lisa"
git config --global user.name
> Mona Lisa

git config --global user.email "email@example.com"
git config --global user.email
email@example.com

==========ssh key================
生成
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
启动  ssh-agent
start  ssh-agent in the background
eval $(ssh-agent -s)
Agent pid 59566

添加key到agent
ssh-add ~/.ssh/id_rsa

添加key到 GitHub

==git remote===================
git remote -v    #列出所有 主机名，和主机对应的地址
origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)
origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)

git remote add upstream https://github.com/octocat/Spoon-Knife.git #添加主机 upstream  地址： https://github.com/octocat/Spoon-Knife.git

git remote -v
origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)
origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)
upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (fetch)
upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (push)

git remote rm <主机名> #删除

===============git fetch============================更新
git fetch #默认取回所有分支（branch）的更新
git fetch <远程主机名>
只想取回特定分支的更新，可以指定分支名
git fetch origin master

===============git branch =====================
查看远程分支
git branch -r
查看所有分支
git branch -a
创建远程分支
git branch wanminle
转到wanminle分支
git checkout wanminle 
创建新分支 newBrach 在origin/master 的基础上
git checkout -b newBrach origin/master


======git pull ==================================在实际使用中，git fetch更安全一些

git pull：相当于是从远程获取最新版本并merge到本地

git pull origin master
git pull <远程主机名> <远程分支名>:<本地分支名>
比如，取回origin主机的next分支，与本地的master分支合并，需要写成下面这样。
 git pull origin next:master
如果远程分支是与当前分支合并，则冒号后面的部分可以省略
git pull origin next
如果当前分支与远程分支存在追踪关系，git pull就可以省略远程分支名。
$ git pull origin
上面命令表示，本地的当前分支自动与对应的origin主机"追踪分支"（remote-tracking branch）进行合并。
$ git pull
同于先做git fetch，再做git merge。
$ git fetch origin
$ git merge origin/next


==================git push ======================
git push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相仿。
$ git push <远程主机名> <本地分支名>:<远程分支名>
